# YOLOv8 Vehicle Annotator - .gitignore
# ======================================
# Updated: 2025-08-31
# This file ignores files that should not be committed to version control

# Project specific - YOLO Vehicle Annotator
# ======================================

# Export directories (generated annotation files)
exports/
exports/yolo/
exports/coco/
exports/json/
exports/pascal voc/

# Image directories (may contain test/sample images)
images/
# Exception: Keep test images 1-4
!images/test1.jpg
!images/test2.png
!images/test3.png
!images/test4.jpg
test_images/
sample_images/

# Model files (large binary files)
*.pt
*.pth
*.onnx
*.engine
yolo*.pt
yolov8*.pt
yolo11*.pt
model_weights/
models/

# Cache and temporary files
.cache/
ultralytics/
wandb/
tensorboard/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
.junitxml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pypenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pyp_packages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files - Windows
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini
*.lnk
$RECYCLE.BIN/
*.stackdump
*.lock

# OS generated files - macOS
.AppleDouble
.LSOverride
Icon
.DocumentRevisions-V100
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# OS generated files - Linux
*~
.directory
.Trash-*
.fuse_hidden*
.nfs*

# Qt/PyQt5 specific
*.pro.user
*.pro.user.*
*.qbs.user
*.qbs.user.*
*.moc
moc_*.cpp
moc_*.h
qrc_*.cpp
ui_*.h
Makefile*
*build-*
*.qm
*.ts

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.orig
*.rej

# Log files
*.log
logs/
log/
*.log.*

# Cache directories
.cache/
.pytest_cache/
.mypy_cache/
.coverage/

# User specific files
user_settings.json
personal_config.json
local_config.json

# Test images and data
test_images/
sample_data/
demo_files/
training_data/

# Build artifacts
build/
dist/
*.spec
*.exe

# Database files
*.db
*.sqlite
*.sqlite3
*.db-journal

# Configuration files that may contain sensitive data
config.local.json
secrets.json
private_config.json
api_keys.json

# Project backup files
*.bak
*.backup
*~

# CUDA/GPU cache
__pycache__/
*.pyc
*.pyo
*.pyd
.cudnn/
.nv/

# YOLOv8 specific
ultralytics/
runs/
wandb/
tensorboard/
*.pt
*.pth
*.onnx
*.engine
yolo*.pt
yolov8*.pt
yolo11*.pt

# Export and annotation files
annotations/
labels/
results/
output/
predictions/

# Temporary project files
temp/
tmp/
scratch/
